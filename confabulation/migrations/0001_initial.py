# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-26 19:18
from __future__ import unicode_literals

import colorful.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('color_code', colorful.fields.RGBColorField()),
            ],
        ),
        migrations.CreateModel(
            name='AnalysisType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('connection_range', models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('profile', models.TextField(null=True)),
                ('participation_group', models.CharField(choices=[(b'non-photgrapher', b'non_photographer'), (b'photographer', b'photographer'), (b'student', b'student')], max_length=50)),
                ('gender', models.CharField(choices=[(b'female', b'female'), (b'male', b'male'), (b'other', b'other')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('file_path', models.FilePathField(blank=True, null=True)),
                ('file_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recording',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('duration', models.DurationField(blank=True, null=True)),
                ('data_collection_circumstances', models.CharField(blank=True, max_length=2000, null=True)),
                ('sound_recording_url', models.URLField(blank=True, null=True)),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='confabulation.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order_in_recording', models.IntegerField(blank=True, null=True, unique=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('thumbnail', models.FilePathField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('analysis', models.ManyToManyField(blank=True, null=True, to='confabulation.AnalysisPoint')),
                ('participant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='confabulation.Participant')),
                ('photos', models.ManyToManyField(blank=True, null=True, to='confabulation.Photo')),
            ],
        ),
        migrations.CreateModel(
            name='StoryInTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Story')),
            ],
        ),
        migrations.CreateModel(
            name='StoryToStoryConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_range', models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], max_length=30)),
                ('story1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story1', to='confabulation.Story')),
                ('story2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='story2', to='confabulation.Story')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('connection_range', models.CharField(choices=[(b'Interconnection', b'interconnection'), (b'Intraconnection', b'intraconnection')], max_length=30)),
                ('stories', models.ManyToManyField(through='confabulation.StoryInTheme', to='confabulation.Story')),
            ],
        ),
        migrations.CreateModel(
            name='ThemeInChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Chain')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Theme')),
            ],
        ),
        migrations.CreateModel(
            name='Transscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text_eng', models.CharField(blank=True, max_length=10000, null=True)),
                ('text_hu', models.CharField(blank=True, max_length=10000, null=True)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Recording')),
                ('story', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='confabulation.Story')),
            ],
        ),
        migrations.AddField(
            model_name='storyintheme',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.Theme'),
        ),
        migrations.AddField(
            model_name='chain',
            name='themes',
            field=models.ManyToManyField(through='confabulation.ThemeInChain', to='confabulation.Theme'),
        ),
        migrations.AddField(
            model_name='analysispoint',
            name='analysis_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='confabulation.AnalysisType'),
        ),
    ]
